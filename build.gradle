buildscript {
  ext.kotlin_version = '1.2.61'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'kotlin'
apply plugin: 'application'

// Arrow stuff. 
def arrow_version = "0.7.3"
// @higherkinds and @optics stuff.
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('gradle/generated-kotlin-sources.gradle') //only for Android projects

mainClassName = 'demo.HelloWorldKt'

defaultTasks 'run'

repositories {
  mavenCentral()
  jcenter()
}

configurations {
    ktlint
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  compile "io.arrow-kt:arrow-core:$arrow_version"
  compile "io.arrow-kt:arrow-syntax:$arrow_version"
  compile "io.arrow-kt:arrow-typeclasses:$arrow_version" 
  compile "io.arrow-kt:arrow-data:$arrow_version" 
  compile "io.arrow-kt:arrow-instances-core:$arrow_version"
  compile "io.arrow-kt:arrow-instances-data:$arrow_version"
  kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version" 
  
  // optional arrow stuff.
  compile "io.arrow-kt:arrow-free:$arrow_version"
  compile "io.arrow-kt:arrow-mtl:$arrow_version"
  compile "io.arrow-kt:arrow-effects:$arrow_version"
  compile "io.arrow-kt:arrow-effects-rx2:$arrow_version"
  compile "io.arrow-kt:arrow-effects-reactor:$arrow_version"
  compile "io.arrow-kt:arrow-effects-kotlinx-coroutines:$arrow_version"
  compile "io.arrow-kt:arrow-optics:$arrow_version"
  compile "io.arrow-kt:arrow-generic:$arrow_version"
  compile "io.arrow-kt:arrow-recursion:$arrow_version"
  kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version"


  // Ktlint for code formatting + linting.
  ktlint "com.github.shyiko:ktlint:0.28.0"

  testCompile 'junit:junit:4.11'
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

task wrapper(type: Wrapper) {
  gradleVersion = "4.1"
}

task lint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn lint

task format(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
